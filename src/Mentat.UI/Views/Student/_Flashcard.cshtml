@using Mentat.Domain.Models

@model FlashCardVM

@Html.HiddenFor(m => m.CardID)
<div class="row bottom-buffer col-sm-12" style="display:inline-block;">
    @Html.TextAreaFor(m => m.CardQuestion, 5, 90, new { @maxLength = "250", disabled = true, id = "CardQuestion_"+ @ViewData["index"] })
    <text>&nbsp;</text><span class="fa-solid fa-circle fa-1x fsu-maroon-color"></span>
    <text>&nbsp;</text><span class="fa-solid fa-circle fa-1x fsu-black-color"></span>
    <text>&nbsp;</text><span class="fa-solid fa-circle fa-1x fsu-maroon-color"></span>
</div>
<div class="row col-sm-12">
    <div class="col-sm-2"></div>
    <a href="javascript:;" onclick="goToPrevious(@ViewData["index"]);"><span class="fa-solid fa-circle-arrow-left fa-3x fsu-maroon-color"></span></a>
    <div class="col-sm-1"></div>
    <div class="vertical-line-center">
        <a href="javascript:;" class="fsu-black-color" id="show-hide_@ViewData["index"]" onclick="toggleShowHideOfFlashCard(@ViewData["index"]);">Show</a>
    </div>
    <div class="col-sm-1"></div>
    <a href="javascript:;" onclick="goToNext(@ViewData["index"]);"><span class="fa-solid fa-circle-arrow-right fa-3x fsu-maroon-color"></span></a>
</div>
<div style="display:none">
    @Html.TextAreaFor(m => m.HiddenCardAnswer, 0, 0, new { @maxLength = "250", disabled = true, id = "HiddenCardAnswer_" + @ViewData["index"] })
</div>
<div class="row top-buffer col-sm-12 light-text">
    @Html.TextAreaFor(m => m.CardAnswerOverlay, 5, 117, new { @maxLength = "250", disabled = true, id = "CardAnswerOverlay_" + @ViewData["index"] })
</div>